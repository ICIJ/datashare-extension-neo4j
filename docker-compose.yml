version: '3.7'
services:

  test-elasticsearch:
    container_name: test-elasticsearch
    build:
      context: .
      args:
        DOCKER_PLATFORM: $DOCKER_PLATFORM
        ELASTICSEARCH_VERSION: $ELASTICSEARCH_VERSION
      dockerfile: Dockerfile
      target: elasticsearch
    environment:
      - discovery.type=single-node
      - http.port=9200
    ports:
      - ${ELASTICSEARCH_PORT}:9200
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:9200" ]
      interval: 3s
      timeout: 1s
      retries: 10
      start_period: 20s

  test-neo4j:
    container_name: test-neo4j
    build:
      context: .
      args:
        NEO4J_IMAGE: ${NEO4J_IMAGE}
        NEO4J_VERSION: ${NEO4J_VERSION}
      dockerfile: Dockerfile
      target: neo4j
    environment:
      NEO4J_AUTH: none
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_allow__csv__import__from__file__urls: true
    healthcheck:
      test: [ "CMD", "./neo4j_healthcheck" ]
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s
    ports:
      - 7475:7474
      - 7688:7687
    volumes:
      - type: bind
        source: .data/neo4j/import/
        target: /.neo4j/import/

  test-rabbit-mq:
    container_name: test-rabbit-mq
    image: rabbitmq:3.12.0-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 20s
    ports:
      - 5673:5672
      - 15673:5672
